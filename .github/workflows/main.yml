# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: R-CMD-check.yaml

permissions: read-all

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest, r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-24.04, r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-24.04, r: 'release'}
          # - {os: ubuntu-24.04, r: 'release', rspm: "https://packagemanager.posit.co/cran/__linux__/noble/latest"}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      _R_CHECK_FORCE_SUGGESTS_: false
      # RSPM: ${{ matrix.config.rspm }}

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck, remotes::install_github(c( "asgr/Rfits", "asgr/imager", "asgr/rwcs" ))
          needs: check

      # - name: Query dependencies
      #   run: |
      #     install.packages('remotes')
      #     saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
      #     writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
      #   shell: Rscript {0}

      # - name: Install XQuartz
      #   if: runner.os == 'macOS'
      #   run: |
      #     wget https://github.com/XQuartz/XQuartz/releases/download/XQuartz-2.8.5/XQuartz-2.8.5.pkg
      #     sudo installer -pkg XQuartz-2.8.5.pkg
      #     rm XQuartz-2.8.5.pkg
          
      # - name: Cache R packages
      #   if: runner.os != 'Windows'
      #   uses: actions/cache@v4
      #   with:
      #     path: ${{ env.R_LIBS_USER }}
      #     key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
      #     restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          sudo apt-get install -y \
            curl \
            g++-11 \
            libx11-dev \
            libxt-dev \
            texlive-latex-base \
            texlive-latex-recommended \
            texlive-latex-extra \
            texlive-fonts-recommended \
            texlive-fonts-extra \
            texlive-xetex \
            xvfb
          echo "{XVFB_RUN}={xvfb-run}" >> $GITHUB_ENV
      # - name: Install dependencies
      #   run: |
      #     Sys.setenv(GITHUB_PAT = "${{ secrets.GITHUB_TOKEN }}")
      #     remotes::install_github("asgr/Rfits")
      #     remotes::install_github("asgr/rwcs")
      #     remotes::install_deps(dependencies = TRUE)
      #     remotes::install_cran("rcmdcheck")
      #   shell: Rscript {0}

      - uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true
          upload-results: true
          build_args: 'c("--no-manual","--compact-vignettes=gs+qpdf")'

      # - name: Check
      #   env:
      #     _R_CHECK_CRAN_INCOMING_REMOTE_: false
      #     GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     $XVFB_RUN Rscript -e "install.packages('imager')"
      #     $XVFB_RUN Rscript -e "remotes::install_deps(dependencies = TRUE)"
      #     $XVFB_RUN Rscript -e "remotes::install_github(c('asgr/rwcs', 'asgr/Rfits'))"
      #     $XVFB_RUN Rscript -e "remotes::install_cran('rcmdcheck')"
      #     $XVFB_RUN Rscript -e "rcmdcheck::rcmdcheck(args = c('--no-manual', '--as-cran'), error_on = 'error', check_dir = 'check')"
      #   shell: bash

      # - name: Upload check results
      #   if: failure()
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: ${{ runner.os }}-r${{ matrix.config.r }}-results
      #     path: check
